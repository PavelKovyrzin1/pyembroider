import telebot
from telebot import types
from pathlib import Path
import numpy as np
from PIL import Image
from docopt import docopt
from pixelate import pixelate
import os
from color_show import show_color, save_color_sample, create_color_grid
from color_data import floss_colors, color_groups

# –£–∫–∞–∂–∏—Ç–µ –∑–¥–µ—Å—å —Ç–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
API_TOKEN = '8174585257:AAHIAJbSk_SqWaf-2MD-wTECq_aVi9INGcs'

bot = telebot.TeleBot(API_TOKEN)

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–≤ —Ü–µ–ª—è—Ö –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏)
user_data = {}

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def start_command(message):
    user_id = message.chat.id
    user_data[user_id] = {'colors': [], 'image': None}

    bot.send_message(user_id,
                     "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ PyEmbroider! üëã\n"
                     "–Ø –ø–æ–º–æ–≥—É –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Å—Ö–µ–º—ã –¥–ª—è –≤—ã—à–∏–≤–∞–Ω–∏—è –∫—Ä–µ—Å—Ç–∏–∫–æ–º.\n"
                     "–ù–∞–ø–∏—à–∏—Ç–µ /help, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ, –∏–ª–∏ –Ω–∞—á–Ω–µ–º –∑–∞–≥—Ä—É–∑–∫—É!",
                     reply_markup=main_menu_keyboard())

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
@bot.message_handler(commands=['help'])
def help_command(message):
    bot.send_message(
        message.chat.id,
        "ü§ñ –ß—Ç–æ —è —É–º–µ—é:\n"
        "1Ô∏è‚É£ –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤—ã–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Å—Ö–µ–º—ã –¥–ª—è –≤—ã—à–∏–≤–∫–∏.\n"
        "2Ô∏è‚É£ –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —Ü–≤–µ—Ç–∞ –Ω–∏—Ç–æ–∫ –∏ –¥–∞–≤–∞—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∏—Ö –ø–æ–∫—É–ø–∫–µ.\n"
        "3Ô∏è‚É£ –†–∞—Å—á–∏—Ç—ã–≤–∞—Ç—å –¥–ª–∏–Ω—É –Ω–∏—Ç–æ–∫ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞.\n\n"
        "–î–∞–≤–∞–π—Ç–µ –Ω–∞—á–Ω–µ–º! –î–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞–∂–º–∏—Ç–µ '–ó–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ' –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ."
    )

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
def main_menu_keyboard():
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    upload_button = types.KeyboardButton("üì§ –ó–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ")
    select_colors_button = types.KeyboardButton("üé® –í–≤–µ—Å—Ç–∏ –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ü–≤–µ—Ç–∞")
    show_colors_button = types.KeyboardButton("üåà –ü–æ–∫–∞–∑–∞—Ç—å —Ü–≤–µ—Ç–∞")
    keyboard.add(upload_button, select_colors_button, show_colors_button)
    return keyboard

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ó–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ"
@bot.message_handler(content_types=['text'])
def handle_text(message):
    user_id = message.chat.id

    if message.text == "üì§ –ó–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ":
        bot.send_message(user_id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å –≤ —Å—Ö–µ–º—É.")
    elif message.text == "üé® –í–≤–µ—Å—Ç–∏ –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ü–≤–µ—Ç–∞":
        bot.send_message(user_id, "–ù–∞–ø–∏—à–∏—Ç–µ —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ü–≤–µ—Ç–æ–≤ –Ω–∏—Ç–æ–∫ (–Ω–∞–ø—Ä–∏–º–µ—Ä: –∫—Ä–∞—Å–Ω—ã–π, —Å–∏–Ω–∏–π, –∑–µ–ª–µ–Ω—ã–π).")
    elif message.text == "üåà –ü–æ–∫–∞–∑–∞—Ç—å —Ü–≤–µ—Ç–∞":
        show_color_brands(message)
    else:
        bot.send_message(user_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
@bot.message_handler(content_types=['photo'])
def handle_photo(message):
    user_id = message.chat.id

    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–µ
    file_info = bot.get_file(message.photo[-1].file_id)
    downloaded_file = bot.download_file(file_info.file_path)
    """
      # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é
    if message.caption:
        photo_caption = message.caption  # –ü–æ–¥–ø–∏—Å—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        # –£–±–∏—Ä–∞–µ–º –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã –∏–∑ –Ω–∞–∑–≤–∞–Ω–∏—è
        photo_caption = re.sub(r'[^\w\s-]', '', photo_caption).strip().replace(' ', '_')
    else:
        photo_caption = str(uuid.uuid4())  # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–ª—é—á

    # –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    bot.send_message(user_id, "–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ. –ù–∞—á–∏–Ω–∞—é –æ–±—Ä–∞–±–æ—Ç–∫—É...")

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç—å –¥–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_folder = f'photos/{user_id}'
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è, –∏ —Å–æ–∑–¥–∞—ë–º –µ—ë –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏
    if not os.path.exists(user_folder):
        os.makedirs(user_folder)

    # –ü—É—Ç—å –¥–æ —Ñ–∞–π–ª–∞, –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ–µ –∏–º—è
    file_path = os.path.join(user_folder, f'{photo_caption}.jpg')

    # –ï—Å–ª–∏ —Ñ–∞–π–ª —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –¥–æ–±–∞–≤–ª—è–µ–º —á–∏—Å–ª–æ–≤–æ–π –∏–Ω–¥–µ–∫—Å –∫ –∏–º–µ–Ω–∏
    index = 1
    while os.path.exists(file_path):
        file_path = os.path.join(user_folder, f'{photo_caption}_{index}.jpg')
        index += 1

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ —Ñ–∞–π–ª
    with open(file_path, 'wb') as file:
        file.write(downloaded_file)

    # –°–æ–æ–±—â–∞–µ–º –æ–± —É—Å–ø–µ—à–Ω–æ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏
    bot.send_message(user_id, f"–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –ø–æ–¥ –∏–º–µ–Ω–µ–º: {os.path.basename(file_path)}")
    """
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    temp_file_path = 'temp_image.jpg'
    with open(temp_file_path, 'wb') as temp_file:
        temp_file.write(downloaded_file)

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é –≤ user_data
    user_data[user_id] = {}
    user_data[user_id]['image'] = temp_file_path

    bot.send_message(user_id, "–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ. –ù–∞—á–∏–Ω–∞—é –æ–±—Ä–∞–±–æ—Ç–∫—É...")

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    image = Image.open(temp_file_path).convert('RGB')
    pixelated_image = pixelate(image, 16)

    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    output_path = 'pixelated_image.jpg'
    pixelated_image.save(output_path)

    # –û—Ç–ø—Ä–∞–≤–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    with open(output_path, 'rb') as output_file:
        bot.send_photo(user_id, output_file)

    # –£–¥–∞–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    os.remove(temp_file_path)
    os.remove(output_path)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –Ω–∏—Ç–æ–∫
@bot.message_handler(content_types=['text'])
def handle_colors(message):
    user_id = message.chat.id

    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —É–∫–∞–∑–∞–Ω–Ω—ã—Ö —Ü–≤–µ—Ç–æ–≤ –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä—É
    if 'colors' in user_data[user_id]:
        user_data[user_id]['colors'] = message.text.split(',')
        bot.send_message(user_id, "–¶–≤–µ—Ç–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã! –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é.")
    else:
        bot.send_message(user_id, "–û—à–∏–±–∫–∞! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ —Å –∫–æ–º–∞–Ω–¥—ã /start.")

# –û—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ –∏ –ø—Ä–æ—á–∏—Ö —Ç–∏–ø–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(func=lambda message: True)
def default_handler(message):
    bot.send_message(
        message.chat.id,
        "–Ø –≤–∞—Å –Ω–µ –ø–æ–Ω—è–ª. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è."
    )

def show_color_brands(message):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ –±—Ä–µ–Ω–¥—ã –Ω–∏—Ç–æ–∫"""
    keyboard = types.InlineKeyboardMarkup()
    for brand in floss_colors.keys():
        callback_button = types.InlineKeyboardButton(text=brand, callback_data=f"brand_{brand}")
        keyboard.add(callback_button)
    
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –±—Ä–µ–Ω–¥ –Ω–∏—Ç–æ–∫:", reply_markup=keyboard)

@bot.callback_query_handler(func=lambda call: call.data.startswith('brand_'))
def handle_brand_selection(call):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –±—Ä–µ–Ω–¥–∞"""
    brand = call.data.split('_')[1]
    show_color_groups(call.message, brand)

def show_color_groups(message, brand):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥—Ä—É–ø–ø—ã —Ü–≤–µ—Ç–æ–≤ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –±—Ä–µ–Ω–¥–∞"""
    keyboard = types.InlineKeyboardMarkup()
    for group_name in color_groups.keys():
        callback_button = types.InlineKeyboardButton(
            text=group_name, 
            callback_data=f"group_{brand}_{group_name}"
        )
        keyboard.add(callback_button)
    
    bot.edit_message_text(
        chat_id=message.chat.id,
        message_id=message.message_id,
        text=f"–í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É —Ü–≤–µ—Ç–æ–≤ –¥–ª—è –±—Ä–µ–Ω–¥–∞ {brand}:",
        reply_markup=keyboard
    )

@bot.callback_query_handler(func=lambda call: call.data.startswith('group_'))
def handle_group_selection(call):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –≥—Ä—É–ø–ø—ã —Ü–≤–µ—Ç–æ–≤"""
    _, brand, group = call.data.split('_')
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è –æ–±—Ä–∞–∑—Ü–∞ —Ü–≤–µ—Ç–∞
    temp_dir = 'temp_colors'
    if not os.path.exists(temp_dir):
        os.makedirs(temp_dir)

    # –°–æ–±–∏—Ä–∞–µ–º —Ü–≤–µ—Ç–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –≥—Ä—É–ø–ø—ã
    group_colors = []
    keywords = color_groups.get(group, [])
    
    for color_name, color_data in floss_colors[brand].items():
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ü–≤–µ—Ç–∞ –ª—é–±–æ–µ –∏–∑ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ –≥—Ä—É–ø–ø—ã
        if any(keyword in color_name for keyword in keywords):
            group_colors.append({
                'name': color_name,
                'code': color_data['code'],
                'rgb': color_data['rgb']
            })

    if group_colors:
        # –°–æ–∑–¥–∞–µ–º —Å–µ—Ç–∫—É —Ü–≤–µ—Ç–æ–≤
        output_path = f"{temp_dir}/{brand}_{group}.png"
        create_color_grid(brand, group_colors, output_path)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å —Å–µ—Ç–∫–æ–π —Ü–≤–µ—Ç–æ–≤
        with open(output_path, 'rb') as photo:
            caption = f"–¶–≤–µ—Ç–∞ –≥—Ä—É–ø–ø—ã '{group}' –±—Ä–µ–Ω–¥–∞ {brand}"
            bot.send_photo(call.message.chat.id, photo, caption=caption)
        
        # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        os.remove(output_path)
    else:
        bot.send_message(call.message.chat.id, f"–¶–≤–µ—Ç–∞ –≥—Ä—É–ø–ø—ã '{group}' –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –¥–ª—è –±—Ä–µ–Ω–¥–∞ {brand}")

    bot.answer_callback_query(call.id)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__':
    bot.infinity_polling()
